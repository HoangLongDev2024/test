///
/// NitroMath-Swift-Cxx-Bridge.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "NitroMath-Swift-Cxx-Bridge.hpp"

// Include C++ implementation defined types
#include "HybridMQTTSpecSwift.hpp"
#include "HybridMathSpecSwift.hpp"
#include "NitroMath-Swift-Cxx-Umbrella.hpp"
#include <NitroModules/HybridContext.hpp>

namespace margelo::nitro::nitroMath::bridge::swift {

  // pragma MARK: std::shared_ptr<margelo::nitro::nitroMath::HybridMathSpec>
  std::shared_ptr<margelo::nitro::nitroMath::HybridMathSpec> create_std__shared_ptr_margelo__nitro__nitroMath__HybridMathSpec_(size_t swiftReferenceId) {
    NitroMath::HybridMathSpecCxx swiftPart = NitroMath::HybridMathSpecCxxReferenceHolder::getById(swiftReferenceId);
    return HybridContext::getOrCreate<margelo::nitro::nitroMath::HybridMathSpecSwift>(swiftPart);
  }
  size_t get_std__shared_ptr_margelo__nitro__nitroMath__HybridMathSpec_(std__shared_ptr_margelo__nitro__nitroMath__HybridMathSpec_ cppType) {
    std::shared_ptr<margelo::nitro::nitroMath::HybridMathSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::nitroMath::HybridMathSpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridMathSpec\" is not implemented in Swift!");
    }
  #endif
    NitroMath::HybridMathSpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroMath::HybridMathSpecCxxReferenceHolder::put(swiftPart);
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::nitroMath::HybridMQTTSpec>
  std::shared_ptr<margelo::nitro::nitroMath::HybridMQTTSpec> create_std__shared_ptr_margelo__nitro__nitroMath__HybridMQTTSpec_(size_t swiftReferenceId) {
    NitroMath::HybridMQTTSpecCxx swiftPart = NitroMath::HybridMQTTSpecCxxReferenceHolder::getById(swiftReferenceId);
    return HybridContext::getOrCreate<margelo::nitro::nitroMath::HybridMQTTSpecSwift>(swiftPart);
  }
  size_t get_std__shared_ptr_margelo__nitro__nitroMath__HybridMQTTSpec_(std__shared_ptr_margelo__nitro__nitroMath__HybridMQTTSpec_ cppType) {
    std::shared_ptr<margelo::nitro::nitroMath::HybridMQTTSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::nitroMath::HybridMQTTSpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridMQTTSpec\" is not implemented in Swift!");
    }
  #endif
    NitroMath::HybridMQTTSpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return NitroMath::HybridMQTTSpecCxxReferenceHolder::put(swiftPart);
  }

} // namespace margelo::nitro::nitroMath::bridge::swift
