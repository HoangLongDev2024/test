///
/// ImageSpec.swift
/// Thu Aug 01 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/react-native-nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/**
 * A Swift protocol representing the Image HybridObject.
 * Implement this protocol to create Swift-based instances of Image.
 *
 * When implementing this protocol, make sure to initialize `hybridContext` - example:
 * ```
 * public class Image : ImageSpec {
 *   // Initialize HybridContext
 *   var hybridContext = margelo.nitro.HybridContext()
 *
 *   // Return size of the instance to inform JS GC about memory pressure
 *   var memorySize: Int {
 *     return getSizeOf(self)
 *   }
 *
 *   // ...
 * }
 * ```
 */
public protocol ImageSpec: HybridObjectSpec {
  // Properties
  var size: margelo.nitro.image.ImageSize { get }
  var pixelFormat: margelo.nitro.image.PixelFormat { get }
  var someSettableProp: Double { get set }

  // Methods
  func toArrayBuffer(format: margelo.nitro.image.ImageFormat) throws -> Double
  func saveToFile(path: String, onFinished: margelo.nitro.image.Func_void_std__string) throws -> Void
}

public extension ImageSpec {
  /**
   * Create a new instance of ImageSpecCxx for the given ImageSpec.
   *
   * Instances of ImageSpecCxx can be accessed from C++, and contain
   * additional required bridging code for C++ <> Swift interop.
   */
  func createCxxBridge() -> ImageSpecCxx {
    return ImageSpecCxx(self)
  }
}